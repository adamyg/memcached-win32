name: build
on: [push]
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVCx64",
            os: windows-latest,
            toolchain: vc2022-x64,
            toolversion: vs170/x64,
            arch: x64
          }
        - {
            name: "Windows Latest MSVCx86",
            os: windows-latest,
            toolchain: vc2022,
            toolversion: vs170,
            arch: x86
          }
        - {
            name: "Windows Latest MinGW64",
            os: windows-latest,
            toolchain: mingw64,
            toolversion: mingw64,
            arch: x64
          }
        - {
            name: "Windows Latest MinGW32",
            os: windows-latest,
            toolchain: mingw32,
            toolversion: mingw32,
            arch: x86
          }
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive

    - name: MSVC setup
      uses: ilammy/msvc-dev-cmd@v1
      if: startsWith(matrix.config.name, 'Windows Latest MSVC')
      with:
        arch: ${{ matrix.config.arch }}

    - name: vcpkgs
      if: startsWith(matrix.config.name, 'Windows Latest MSVC')
      shell: cmd
      run: |
        git clone https://github.com/microsoft/vcpkg ../vcpkg
        if not "%VCPKG_ROOT%" == "" dir /S %VCPKG_ROOT%
        set VCPKG_ROOT=
        set VCPKG_DISABLE_METRICS=true
        set VCPKG_DEFAULT_TRIPLET=${{ matrix.config.arch }}-windows
        call ..\vcpkg\bootstrap-vcpkg.bat
        ..\vcpkg\vcpkg install
        ..\vcpkg\vcpkg integrate install
        dir /S .\vcpkg_installed

    - name: MinGW64 setup
      if: startsWith(matrix.config.name, 'Windows Latest MinGW64')
      shell: cmd
      run: |
        c:\msys64\usr\bin\pacman --noconfirm -S base-devel
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-gcc
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-openssl
        dir c:\msys64\usr\bin

    - name: MinGW32 setup
      if: startsWith(matrix.config.name, 'Windows Latest MinGW32')
      shell: cmd
      run: |
        c:\msys64\usr\bin\pacman --noconfirm -S base-devel
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-i686-gcc
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-i686-openssl
        dir c:\msys64\usr\bin

    - name: OpenWatcom setup
      uses: open-watcom/setup-watcom@v0
      if: startsWith(matrix.config.name, 'Windows Latest OWC')
      with:
        version: "2.0"
        location: "C:\\Watcom"

    - name: Generate
      if: startsWith(matrix.config.name, 'Windows Latest')
      shell: cmd
      run: |
        @if "${{ matrix.config.toolchain }}"=="mingw32" set PATH=c:\msys64\mingw32\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="mingw64" set PATH=c:\msys64\mingw64\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="owc20"  call .\support\owc20setenv.bat C:\Watcom
        @set PERL=c:/Strawberry/perl/bin/perl
        set
        c:/Strawberry/perl/bin/perl makelib.pl --perlpath=c:/Strawberry/perl/bin --busybox=./win32/busybox "${{ matrix.config.toolchain }}"

    - name: Compile
      if: startsWith(matrix.config.name, 'Windows Latest')
      shell: cmd
      run: |
        @if "${{ matrix.config.toolchain }}"=="mingw32" set PATH=c:\msys64\mingw32\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="mingw64" set PATH=c:\msys64\mingw64\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="owc20"  call .\support\owc20setenv.bat C:\Watcom
        @set PERL=c:/Strawberry/perl/bin/perl
        .\win32\gmake-42 release

    - name: Package
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ matrix.config.toolchain }}
        path: ./bin.${{ matrix.config.toolversion }}/release/*

